{"ast":null,"code":"var _jsxFileName = \"D:\\\\projects\\\\profilemanagement\\\\MenteePanel\\\\src\\\\components\\\\Forms\\\\LatestSessions.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from 'react';\nimport './LatestSessions.scss'; // Import SCSS styling\nimport { AuthContext } from '../../context/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LatestSessions = () => {\n  _s();\n  const [sessions, setSessions] = useState([]);\n  var {\n    user\n  } = useContext(AuthContext);\n  useEffect(() => {\n    const fetchSessions = async () => {\n      try {\n        const response = await fetch('/api/sessions'); // Fetch data from the endpoint\n        if (!response.ok) {\n          throw new Error('Failed to fetch sessions');\n        }\n        const data = await response.json(); // Parse JSON response\n        console.log(data);\n        // Sort sessions by date in descending order\n        const sortedSessions = data.sort((a, b) => new Date(b.date) - new Date(a.date));\n        setSessions(sortedSessions);\n      } catch (error) {\n        console.error('Error fetching sessions:', error);\n      }\n    };\n    fetchSessions();\n  }, []);\n  const handleBookSlot = async sessionId => {\n    try {\n      const email = user.email;\n      const response = await fetch(`/api/book-slot`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          sessionId,\n          email\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to book slot');\n      }\n      const result = await response.json();\n      console.log(result);\n      // Optionally update the local state or show a success message\n      alert('Slot booked successfully!');\n    } catch (error) {\n      console.error('Error booking slot:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"latest-sessions\",\n      children: sessions.map(session => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"session-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mentor-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"mentor-name\",\n            children: session.name || 'Mentor Name'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mentor-bio\",\n            children: session.bio || 'Mentor Bio'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mentor-expertise\",\n            children: session.expertise ? session.expertise.join(', ') : 'Mentor Expertise'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"session-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Topic:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 16\n            }, this), \" \", session.topic || 'Session Topic']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Date:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 16\n            }, this), \" \", new Date(session.date).toLocaleDateString() || 'Session Date']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Time:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 16\n            }, this), \" \", `${session.startTime || 'Start Time'} - ${session.endTime || 'End Time'}`]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Status:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 16\n            }, this), \" \", session.status || 'Status']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"book-button\",\n          onClick: () => handleBookSlot(session.sessionId),\n          children: \"Book Slot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, session.sessionId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(LatestSessions, \"K+MNq5hOepvb7o/k9g3KagBmdrI=\");\n_c = LatestSessions;\nexport default LatestSessions;\nvar _c;\n$RefreshReg$(_c, \"LatestSessions\");","map":{"version":3,"names":["React","useContext","useEffect","useState","AuthContext","jsxDEV","_jsxDEV","LatestSessions","_s","sessions","setSessions","user","fetchSessions","response","fetch","ok","Error","data","json","console","log","sortedSessions","sort","a","b","Date","date","error","handleBookSlot","sessionId","email","method","headers","body","JSON","stringify","result","alert","className","children","map","session","name","fileName","_jsxFileName","lineNumber","columnNumber","bio","expertise","join","topic","toLocaleDateString","startTime","endTime","status","onClick","_c","$RefreshReg$"],"sources":["D:/projects/profilemanagement/MenteePanel/src/components/Forms/LatestSessions.jsx"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\r\nimport './LatestSessions.scss'; // Import SCSS styling\r\nimport { AuthContext } from '../../context/AuthContext';\r\nconst LatestSessions = () => {\r\n  const [sessions, setSessions] = useState([]);\r\nvar{user}=useContext(AuthContext)\r\n  useEffect(() => {\r\n    const fetchSessions = async () => {\r\n      try {\r\n        const response = await fetch('/api/sessions'); // Fetch data from the endpoint\r\n        if (!response.ok) {\r\n          throw new Error('Failed to fetch sessions');\r\n        }\r\n        const data = await response.json(); // Parse JSON response\r\n        console.log(data)\r\n        // Sort sessions by date in descending order\r\n        const sortedSessions = data.sort((a, b) => new Date(b.date) - new Date(a.date));\r\n        setSessions(sortedSessions);\r\n      } catch (error) {\r\n        console.error('Error fetching sessions:', error);\r\n      }\r\n    };\r\n\r\n    fetchSessions();\r\n  }, []);\r\n  const handleBookSlot = async (sessionId) => {\r\n    try {\r\n        const email=user.email\r\n      const response = await fetch(`/api/book-slot`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          sessionId,\r\n          email\r\n        }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Failed to book slot');\r\n      }\r\n\r\n      const result = await response.json();\r\n      console.log(result);\r\n      // Optionally update the local state or show a success message\r\n      alert('Slot booked successfully!');\r\n    } catch (error) {\r\n      console.error('Error booking slot:', error);\r\n    }\r\n  };\r\n  return (\r\n    <div className='main-container'>\r\n    <div className=\"latest-sessions\">\r\n      {sessions.map((session) => (\r\n        <div key={session.sessionId} className=\"session-card\">\r\n          <div className=\"mentor-info\">\r\n            <h3 className=\"mentor-name\">{session.name || 'Mentor Name'}</h3>\r\n            <p className=\"mentor-bio\">{session.bio || 'Mentor Bio'}</p>\r\n            <p className=\"mentor-expertise\">{session.expertise ? session.expertise.join(', ') : 'Mentor Expertise'}</p>\r\n          </div>\r\n          <div className=\"session-details\">\r\n            <p><strong>Topic:</strong> {session.topic || 'Session Topic'}</p>\r\n            <p><strong>Date:</strong> {new Date(session.date).toLocaleDateString() || 'Session Date'}</p>\r\n            <p><strong>Time:</strong> {`${session.startTime || 'Start Time'} - ${session.endTime || 'End Time'}`}</p>\r\n            <p><strong>Status:</strong> {session.status || 'Status'}</p>\r\n            {/* {session.isPaid ? <p><strong>Type:</strong> Paid</p> : <p><strong>Type:</strong> Free</p>} */}\r\n          </div>\r\n          <button className=\"book-button\" onClick={() => handleBookSlot(session.sessionId)}>\r\n              Book Slot\r\n          </button>\r\n        </div>\r\n      ))}\r\n    </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LatestSessions;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}